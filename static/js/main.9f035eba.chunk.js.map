{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","TextInput","React","createRef","TextOut","useState","output","setOutput","f1","arg","console","log","onClick","className","onDoubleClick","type","onInput","event","current","value","innerHTML","ref","defaultValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LA0CeA,MAvCf,WACE,IACIC,EAAUC,IAAMC,YAChBC,EAAQF,IAAMC,YAHL,EAIeE,mBAAS,SAJxB,mBAINC,EAJM,KAIEC,EAJF,KAMb,SAASC,EAAGC,GACVC,QAAQC,IAAI,WAAaF,GAW3B,OACE,qCACC,4EACA,oCACE,wCACA,wBAAQG,QAASJ,EAAG,GAApB,qBAEH,oCACG,2DACA,qBAAKK,UAAU,OAAOC,cAAe,kBAAIN,EAAG,SAE/C,oCACG,uCACA,uBAAOO,KAAK,OAAOC,QAnBxB,SAAmBC,GAEjBP,QAAQC,IAAIV,EAAUiB,QAAQC,OAC9Bf,EAAQc,QAAQE,UAAUnB,EAAUiB,QAAQC,MAC5CZ,EAAUN,EAAUiB,QAAQC,QAecE,IAAKpB,EAAWqB,aAAa,OACpE,mBAAGD,IAAKjB,IACR,6BAAKE,WCxBGiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.9f035eba.chunk.js","sourcesContent":["import './App.css';\nimport React from \"react\";\nimport {useState} from 'react';\nfunction App() {\n  let a = 5;\n  let TextInput=React.createRef();\n  let TextOut=React.createRef();\n  const [output, setOutput] = useState('hello');\n\n  function f1(arg) {\n    console.log(\"f1 work \" + arg);\n  }\n  function f2() {\n    console.log(\"move\");\n  }\n  function ShowInput(event) {\n    //console.log(event.target.value);\n    console.log(TextInput.current.value);\n    TextOut.current.innerHTML=TextInput.current.value;\n    setOutput(TextInput.current.value);\n  }\n  return (\n    <>\n     <h1>События</h1>\n     <section>\n       <h2>Button</h2>\n       <button onClick={f1(1)}>Push</button>\n    </section>\n    <section>\n       <h2>Double click + mouse move</h2>\n       <div className=\"test\" onDoubleClick={()=>f1(2)}></div>\n    </section>\n    <section>\n       <h2>Input</h2>\n       <input type=\"text\" onInput={ShowInput} ref={TextInput} defaultValue=\"Hi\"/>\n       <p ref={TextOut}></p>\n       <h3>{output}</h3>\n    </section>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}